model:
    name: 'SelfSupModel'
    optimizer:
        name: 'Adam'
        depth:
            lr: 0.0001
        pose:
            lr: 0.0001
    scheduler:
        name: 'StepLR'
        step_size: 30
        gamma: 0.5
    depth_net:
        name: 'ResNetSAN01'
        version: '18A'
        dropout: 0.1
    pose_net:
        name: 'PoseNet'
        version: ''
    params:
        crop: ''
        min_depth: 0.0
        max_depth: 80.0
        scale_output: 'top-center'

datasets:
    augmentation:
        image_shape: (1536, 1920) # 1920x1536 원본 이미지 사이즈로 학습
    train:
        batch_size: 2 # Reduced for larger image size
        dataset: ['ncdb']
        path: ['/workspace/packnet-sfm/ncdb-cls']
        split: ['splits/combined_train.json']
        repeat: [1]
        depth_type: ['depth_maps'] # NCDB는 depth_maps를 사용
        mask_file: ['binary_mask.png']
    validation:
        batch_size: 1 # Reduced for larger image size
        dataset: ['ncdb']
        path: ['/workspace/packnet-sfm/ncdb-cls']
        split: ['splits/combined_val.json']
        depth_type: ['depth_maps'] # NCDB는 depth_maps를 사용
        mask_file: ['binary_mask.png']
    test:
        batch_size: 1 # Reduced for larger image size
        dataset: ['ncdb']
        path: ['/workspace/packnet-sfm/ncdb-cls']
        split: ['splits/combined_test.json']
        depth_type: ['depth_maps'] # NCDB는 depth_maps를 사용
        mask_file: ['binary_mask.png']

# 🆕 중간 평가 설정
arch:
    seed: 42
    clip_grad: 10.0
    max_epochs: 30 # Increased for longer training
    eval_during_training: false
    eval_progress_interval: 0.5
    eval_subset_size: 100

checkpoint:
    filepath: 'checkpoints/resnet_selfsup_test/'
    save_top_k: -1

save:
    folder: 'outputs/resnet_selfsup_test/'

tensorboard:
    dry_run: false
    log_frequency: 10 # Log depth every 10 steps
